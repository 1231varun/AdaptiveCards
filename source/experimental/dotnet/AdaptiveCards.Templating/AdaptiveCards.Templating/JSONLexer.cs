//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from JSONLexer.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class JSONLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		COMMA=1, COLON=2, LCB=3, RCB=4, LSB=5, RSB=6, TRUE=7, FALSE=8, NULL=9, 
		StringDeclOpen=10, NUMBER=11, WS=12, CLOSE=13, TEMPLKEYWRD=14, TemplateOpen=15, 
		STRING=16, TEMPLATECLOSE=17, TEMPLATELITERAL=18;
	public const int
		INSIDE=1, TEMPLATEINSIDE=2;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "INSIDE", "TEMPLATEINSIDE"
	};

	public static readonly string[] ruleNames = {
		"COMMA", "COLON", "LCB", "RCB", "LSB", "RSB", "TRUE", "FALSE", "NULL", 
		"StringDeclOpen", "NUMBER", "INT", "EXP", "WS", "CLOSE", "TEMPLKEYWRD", 
		"TemplateOpen", "STRING", "ESC", "UNICODE", "HEX", "SAFECODEPOINT", "TEMPLATECLOSE", 
		"TEMPLATELITERAL"
	};


	public JSONLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public JSONLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "','", "':'", null, null, "'['", "']'", "'true'", "'false'", "'null'", 
		null, null, null, null, "'$data'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "COMMA", "COLON", "LCB", "RCB", "LSB", "RSB", "TRUE", "FALSE", "NULL", 
		"StringDeclOpen", "NUMBER", "WS", "CLOSE", "TEMPLKEYWRD", "TemplateOpen", 
		"STRING", "TEMPLATECLOSE", "TEMPLATELITERAL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "JSONLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static JSONLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x14', '\xA7', '\b', '\x1', '\b', '\x1', '\b', '\x1', 
		'\x4', '\x2', '\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', 
		'\x4', '\x4', '\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', 
		'\t', '\a', '\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', 
		'\t', '\n', '\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', 
		'\t', '\r', '\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', 
		'\x10', '\t', '\x10', '\x4', '\x11', '\t', '\x11', '\x4', '\x12', '\t', 
		'\x12', '\x4', '\x13', '\t', '\x13', '\x4', '\x14', '\t', '\x14', '\x4', 
		'\x15', '\t', '\x15', '\x4', '\x16', '\t', '\x16', '\x4', '\x17', '\t', 
		'\x17', '\x4', '\x18', '\t', '\x18', '\x4', '\x19', '\t', '\x19', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', 
		'\f', '\x5', '\f', 'W', '\n', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x6', '\f', '\\', '\n', '\f', '\r', '\f', '\xE', '\f', ']', '\x5', '\f', 
		'`', '\n', '\f', '\x3', '\f', '\x5', '\f', '\x63', '\n', '\f', '\x3', 
		'\r', '\x3', '\r', '\x3', '\r', '\a', '\r', 'h', '\n', '\r', '\f', '\r', 
		'\xE', '\r', 'k', '\v', '\r', '\x5', '\r', 'm', '\n', '\r', '\x3', '\xE', 
		'\x3', '\xE', '\x5', '\xE', 'q', '\n', '\xE', '\x3', '\xE', '\x3', '\xE', 
		'\x3', '\xF', '\x6', '\xF', 'v', '\n', '\xF', '\r', '\xF', '\xE', '\xF', 
		'w', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', '\x6', '\x13', '\x8C', 
		'\n', '\x13', '\r', '\x13', '\xE', '\x13', '\x8D', '\x3', '\x14', '\x3', 
		'\x14', '\x3', '\x14', '\x5', '\x14', '\x93', '\n', '\x14', '\x3', '\x15', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x15', 
		'\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x3', '\x18', 
		'\x3', '\x18', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x6', '\x19', 
		'\xA4', '\n', '\x19', '\r', '\x19', '\xE', '\x19', '\xA5', '\x2', '\x2', 
		'\x1A', '\x5', '\x3', '\a', '\x4', '\t', '\x5', '\v', '\x6', '\r', '\a', 
		'\xF', '\b', '\x11', '\t', '\x13', '\n', '\x15', '\v', '\x17', '\f', '\x19', 
		'\r', '\x1B', '\x2', '\x1D', '\x2', '\x1F', '\xE', '!', '\xF', '#', '\x10', 
		'%', '\x11', '\'', '\x12', ')', '\x2', '+', '\x2', '-', '\x2', '/', '\x2', 
		'\x31', '\x13', '\x33', '\x14', '\x5', '\x2', '\x3', '\x4', '\v', '\x3', 
		'\x2', '\x32', ';', '\x3', '\x2', '\x33', ';', '\x4', '\x2', 'G', 'G', 
		'g', 'g', '\x4', '\x2', '-', '-', '/', '/', '\x5', '\x2', '\v', '\f', 
		'\xF', '\xF', '\"', '\"', '\n', '\x2', '$', '$', '\x31', '\x31', '^', 
		'^', '\x64', '\x64', 'h', 'h', 'p', 'p', 't', 't', 'v', 'v', '\x5', '\x2', 
		'\x32', ';', '\x43', 'H', '\x63', 'h', '\a', '\x2', '\x2', '!', '$', '$', 
		'^', '^', '}', '}', '\x7F', '\x7F', '\x4', '\x2', '$', '$', '\x7F', '\x7F', 
		'\x2', '\xAA', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '!', '\x3', '\x2', '\x2', '\x2', '\x3', '#', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '%', '\x3', '\x2', '\x2', '\x2', '\x3', '\'', 
		'\x3', '\x2', '\x2', '\x2', '\x4', '\x31', '\x3', '\x2', '\x2', '\x2', 
		'\x4', '\x33', '\x3', '\x2', '\x2', '\x2', '\x5', '\x35', '\x3', '\x2', 
		'\x2', '\x2', '\a', '\x37', '\x3', '\x2', '\x2', '\x2', '\t', '\x39', 
		'\x3', '\x2', '\x2', '\x2', '\v', ';', '\x3', '\x2', '\x2', '\x2', '\r', 
		'=', '\x3', '\x2', '\x2', '\x2', '\xF', '?', '\x3', '\x2', '\x2', '\x2', 
		'\x11', '\x41', '\x3', '\x2', '\x2', '\x2', '\x13', '\x46', '\x3', '\x2', 
		'\x2', '\x2', '\x15', 'L', '\x3', '\x2', '\x2', '\x2', '\x17', 'Q', '\x3', 
		'\x2', '\x2', '\x2', '\x19', 'V', '\x3', '\x2', '\x2', '\x2', '\x1B', 
		'l', '\x3', '\x2', '\x2', '\x2', '\x1D', 'n', '\x3', '\x2', '\x2', '\x2', 
		'\x1F', 'u', '\x3', '\x2', '\x2', '\x2', '!', '{', '\x3', '\x2', '\x2', 
		'\x2', '#', '\x7F', '\x3', '\x2', '\x2', '\x2', '%', '\x85', '\x3', '\x2', 
		'\x2', '\x2', '\'', '\x8B', '\x3', '\x2', '\x2', '\x2', ')', '\x8F', '\x3', 
		'\x2', '\x2', '\x2', '+', '\x94', '\x3', '\x2', '\x2', '\x2', '-', '\x9A', 
		'\x3', '\x2', '\x2', '\x2', '/', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x31', 
		'\x9E', '\x3', '\x2', '\x2', '\x2', '\x33', '\xA3', '\x3', '\x2', '\x2', 
		'\x2', '\x35', '\x36', '\a', '.', '\x2', '\x2', '\x36', '\x6', '\x3', 
		'\x2', '\x2', '\x2', '\x37', '\x38', '\a', '<', '\x2', '\x2', '\x38', 
		'\b', '\x3', '\x2', '\x2', '\x2', '\x39', ':', '\a', '}', '\x2', '\x2', 
		':', '\n', '\x3', '\x2', '\x2', '\x2', ';', '<', '\a', '\x7F', '\x2', 
		'\x2', '<', '\f', '\x3', '\x2', '\x2', '\x2', '=', '>', '\a', ']', '\x2', 
		'\x2', '>', '\xE', '\x3', '\x2', '\x2', '\x2', '?', '@', '\a', '_', '\x2', 
		'\x2', '@', '\x10', '\x3', '\x2', '\x2', '\x2', '\x41', '\x42', '\a', 
		'v', '\x2', '\x2', '\x42', '\x43', '\a', 't', '\x2', '\x2', '\x43', '\x44', 
		'\a', 'w', '\x2', '\x2', '\x44', '\x45', '\a', 'g', '\x2', '\x2', '\x45', 
		'\x12', '\x3', '\x2', '\x2', '\x2', '\x46', 'G', '\a', 'h', '\x2', '\x2', 
		'G', 'H', '\a', '\x63', '\x2', '\x2', 'H', 'I', '\a', 'n', '\x2', '\x2', 
		'I', 'J', '\a', 'u', '\x2', '\x2', 'J', 'K', '\a', 'g', '\x2', '\x2', 
		'K', '\x14', '\x3', '\x2', '\x2', '\x2', 'L', 'M', '\a', 'p', '\x2', '\x2', 
		'M', 'N', '\a', 'w', '\x2', '\x2', 'N', 'O', '\a', 'n', '\x2', '\x2', 
		'O', 'P', '\a', 'n', '\x2', '\x2', 'P', '\x16', '\x3', '\x2', '\x2', '\x2', 
		'Q', 'R', '\a', '$', '\x2', '\x2', 'R', 'S', '\x3', '\x2', '\x2', '\x2', 
		'S', 'T', '\b', '\v', '\x2', '\x2', 'T', '\x18', '\x3', '\x2', '\x2', 
		'\x2', 'U', 'W', '\a', '/', '\x2', '\x2', 'V', 'U', '\x3', '\x2', '\x2', 
		'\x2', 'V', 'W', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\x3', '\x2', '\x2', 
		'\x2', 'X', '_', '\x5', '\x1B', '\r', '\x2', 'Y', '[', '\a', '\x30', '\x2', 
		'\x2', 'Z', '\\', '\t', '\x2', '\x2', '\x2', '[', 'Z', '\x3', '\x2', '\x2', 
		'\x2', '\\', ']', '\x3', '\x2', '\x2', '\x2', ']', '[', '\x3', '\x2', 
		'\x2', '\x2', ']', '^', '\x3', '\x2', '\x2', '\x2', '^', '`', '\x3', '\x2', 
		'\x2', '\x2', '_', 'Y', '\x3', '\x2', '\x2', '\x2', '_', '`', '\x3', '\x2', 
		'\x2', '\x2', '`', '\x62', '\x3', '\x2', '\x2', '\x2', '\x61', '\x63', 
		'\x5', '\x1D', '\xE', '\x2', '\x62', '\x61', '\x3', '\x2', '\x2', '\x2', 
		'\x62', '\x63', '\x3', '\x2', '\x2', '\x2', '\x63', '\x1A', '\x3', '\x2', 
		'\x2', '\x2', '\x64', 'm', '\a', '\x32', '\x2', '\x2', '\x65', 'i', '\t', 
		'\x3', '\x2', '\x2', '\x66', 'h', '\t', '\x2', '\x2', '\x2', 'g', '\x66', 
		'\x3', '\x2', '\x2', '\x2', 'h', 'k', '\x3', '\x2', '\x2', '\x2', 'i', 
		'g', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\x3', '\x2', '\x2', '\x2', 
		'j', 'm', '\x3', '\x2', '\x2', '\x2', 'k', 'i', '\x3', '\x2', '\x2', '\x2', 
		'l', '\x64', '\x3', '\x2', '\x2', '\x2', 'l', '\x65', '\x3', '\x2', '\x2', 
		'\x2', 'm', '\x1C', '\x3', '\x2', '\x2', '\x2', 'n', 'p', '\t', '\x4', 
		'\x2', '\x2', 'o', 'q', '\t', '\x5', '\x2', '\x2', 'p', 'o', '\x3', '\x2', 
		'\x2', '\x2', 'p', 'q', '\x3', '\x2', '\x2', '\x2', 'q', 'r', '\x3', '\x2', 
		'\x2', '\x2', 'r', 's', '\x5', '\x1B', '\r', '\x2', 's', '\x1E', '\x3', 
		'\x2', '\x2', '\x2', 't', 'v', '\t', '\x6', '\x2', '\x2', 'u', 't', '\x3', 
		'\x2', '\x2', '\x2', 'v', 'w', '\x3', '\x2', '\x2', '\x2', 'w', 'u', '\x3', 
		'\x2', '\x2', '\x2', 'w', 'x', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\x3', 
		'\x2', '\x2', '\x2', 'y', 'z', '\b', '\xF', '\x3', '\x2', 'z', ' ', '\x3', 
		'\x2', '\x2', '\x2', '{', '|', '\a', '$', '\x2', '\x2', '|', '}', '\x3', 
		'\x2', '\x2', '\x2', '}', '~', '\b', '\x10', '\x4', '\x2', '~', '\"', 
		'\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', '\a', '&', '\x2', '\x2', '\x80', 
		'\x81', '\a', '\x66', '\x2', '\x2', '\x81', '\x82', '\a', '\x63', '\x2', 
		'\x2', '\x82', '\x83', '\a', 'v', '\x2', '\x2', '\x83', '\x84', '\a', 
		'\x63', '\x2', '\x2', '\x84', '$', '\x3', '\x2', '\x2', '\x2', '\x85', 
		'\x86', '\a', '}', '\x2', '\x2', '\x86', '\x87', '\x3', '\x2', '\x2', 
		'\x2', '\x87', '\x88', '\b', '\x12', '\x5', '\x2', '\x88', '&', '\x3', 
		'\x2', '\x2', '\x2', '\x89', '\x8C', '\x5', ')', '\x14', '\x2', '\x8A', 
		'\x8C', '\x5', '/', '\x17', '\x2', '\x8B', '\x89', '\x3', '\x2', '\x2', 
		'\x2', '\x8B', '\x8A', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8D', '\x3', 
		'\x2', '\x2', '\x2', '\x8D', '\x8B', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8E', '\x3', '\x2', '\x2', '\x2', '\x8E', '(', '\x3', '\x2', '\x2', 
		'\x2', '\x8F', '\x92', '\a', '^', '\x2', '\x2', '\x90', '\x93', '\t', 
		'\a', '\x2', '\x2', '\x91', '\x93', '\x5', '+', '\x15', '\x2', '\x92', 
		'\x90', '\x3', '\x2', '\x2', '\x2', '\x92', '\x91', '\x3', '\x2', '\x2', 
		'\x2', '\x93', '*', '\x3', '\x2', '\x2', '\x2', '\x94', '\x95', '\a', 
		'w', '\x2', '\x2', '\x95', '\x96', '\x5', '-', '\x16', '\x2', '\x96', 
		'\x97', '\x5', '-', '\x16', '\x2', '\x97', '\x98', '\x5', '-', '\x16', 
		'\x2', '\x98', '\x99', '\x5', '-', '\x16', '\x2', '\x99', ',', '\x3', 
		'\x2', '\x2', '\x2', '\x9A', '\x9B', '\t', '\b', '\x2', '\x2', '\x9B', 
		'.', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9D', '\n', '\t', '\x2', '\x2', 
		'\x9D', '\x30', '\x3', '\x2', '\x2', '\x2', '\x9E', '\x9F', '\a', '\x7F', 
		'\x2', '\x2', '\x9F', '\xA0', '\x3', '\x2', '\x2', '\x2', '\xA0', '\xA1', 
		'\b', '\x18', '\x4', '\x2', '\xA1', '\x32', '\x3', '\x2', '\x2', '\x2', 
		'\xA2', '\xA4', '\n', '\n', '\x2', '\x2', '\xA3', '\xA2', '\x3', '\x2', 
		'\x2', '\x2', '\xA4', '\xA5', '\x3', '\x2', '\x2', '\x2', '\xA5', '\xA3', 
		'\x3', '\x2', '\x2', '\x2', '\xA5', '\xA6', '\x3', '\x2', '\x2', '\x2', 
		'\xA6', '\x34', '\x3', '\x2', '\x2', '\x2', '\x11', '\x2', '\x3', '\x4', 
		'V', ']', '_', '\x62', 'i', 'l', 'p', 'w', '\x8B', '\x8D', '\x92', '\xA5', 
		'\x6', '\a', '\x3', '\x2', '\b', '\x2', '\x2', '\x6', '\x2', '\x2', '\a', 
		'\x4', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
