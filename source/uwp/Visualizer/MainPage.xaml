<Page
    x:Class="AdaptiveCardVisualizer.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AdaptiveCardVisualizer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="CommandButton" TargetType="Button">
            <Setter Property="Margin" Value="5,0,0,0"/>
        </Style>
        <Style x:Key="Adaptive.Action.ToggleViewState" TargetType="ToggleButton">
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="RootGrid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPointerOver">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedPressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="CheckedDisabled">
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePointerOver">
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminatePressed">
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="IndeterminateDisabled">
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Content="{TemplateBinding Content}"
                          ContentTransitions="{TemplateBinding ContentTransitions}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          Padding="{TemplateBinding Padding}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          AutomationProperties.AccessibilityView="Raw"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Storyboard x:Key="Adaptive.Storyboard.Reverse.Action.ToggleViewState.toggleActionId">
            <DoubleAnimation
                Storyboard.TargetName="Adaptive.Storyboard.Action.ToggleViewState.togglActionId"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                From="0" To="180" Duration="0:0:.35"
                />
            <DoubleAnimation
                Storyboard.TargetName="FooBar"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                From="1" To="0" Duration="0:0:.35"
                />
            <ObjectAnimationUsingKeyFrames  
                    Storyboard.TargetName="FooBar"
                    Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.25">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--Top buttons-->
        <CommandBar Opening="CommandBar_Opening" Closing="CommandBar_Closing">
            <CommandBar.Content>
                <StackPanel x:Name="StackPanelMainAppBarButtons" Orientation="Horizontal">
                    <AppBarButton
                        Icon="Add"
                        Label="New card"
                        x:Name="AppBarNew"
                        Click="AppBarNew_Click"
                        IsCompact="True"/>
                    <AppBarButton
                        x:Name="AppBarOpen"
                        Icon="OpenFile"
                        Label="Open file"
                        Click="AppBarOpen_Click"
                        IsCompact="True"/>
                    <AppBarButton
                        x:Name="AppBarSave"
                        Icon="Save"
                        Label="Save file"
                        Click="AppBarSave_Click"
                        IsCompact="True"/>
                    <AppBarToggleButton
                        x:Name="AppBarHostConfigEditor"
                        Icon="Setting"
                        Label="Host config"
                        IsCompact="True"
                        Click="AppBarHostConfigEditor_Click"/>
                    <AppBarToggleButton
                        x:Name="AppBarFrameEditor"
                        Icon="Document"
                        Label="Frame"
                        IsCompact="True"
                        Click="AppBarFrameEditor_Click"/>
                    <AppBarToggleButton
                        x:Name="AppBarRuntimeObjectEditor"
                        Icon="OutlineStar"
                        Label="RuntimeObject"
                        IsCompact="True"
                        Click="AppBarRuntimeObjectEditor_Click"/>
                </StackPanel>
            </CommandBar.Content>
            <CommandBar.SecondaryCommands>
                <AppBarToggleButton
                    Label="Use fixed dimensions"
                    IsChecked="{Binding UseFixedDimensions, Mode=TwoWay}"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="140"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!--Tabs-->
            <ListView
                x:Name="ListViewTabs"
                ItemsSource="{Binding OpenDocuments}"
                SelectedItem="{Binding CurrentDocument, Mode=TwoWay}"
                Background="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}"
                ItemContainerStyle="{StaticResource HorizontalListViewItemContainerStyle}"
                AllowDrop="True"
                CanReorderItems="True">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <local:TabView />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <!--Tab page-->
            <local:DocumentView
                Grid.Column="1"
                DataContext="{Binding CurrentDocument}"
                Visibility="{Binding CurrentDocument, Converter={StaticResource NotNullToVisibilityConverter}}"/>

        </Grid>
        
        <!--Host config editor-->
        <Grid
            Grid.Row="1"
            x:Name="HostConfigEditorView"
            Visibility="Collapsed">
            
            <Rectangle
                Fill="Black"
                Opacity="0.3"
                Tapped="HostConfigTransparentBackdrop_Tapped"/>

            <!--We apply padding on right to keep the preview visible-->
            <Grid
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                BorderThickness="0,0,8,0"
                BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"
                Margin="0,0,320,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock
                    Text="Host config"
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Margin="6"/>
                <local:GenericDocumentView
                    Grid.Row="1"
                    DataContext="{Binding HostConfigEditor}"/>
            </Grid>
        </Grid>

        <!--Frame editor-->
        <Grid
            Grid.Row="1"
            x:Name="FrameEditorView"
            Visibility="Collapsed">

            <Rectangle
                Fill="Black"
                Opacity="0.3"
                Tapped="FrameTransparentBackdrop_Tapped"/>

            <!--We apply padding on right to keep the preview visible-->
            <Grid
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                BorderThickness="0,0,8,0"
                BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"
                Margin="0,0,320,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock
                    Text="Frame"
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Margin="6"/>
                <local:GenericDocumentView
                    Grid.Row="1"
                    DataContext="{Binding FrameEditor}"/>
            </Grid>
        </Grid>

        <!--RuntimeObject editor-->
        <Grid
            Grid.Row="1"
            x:Name="RuntimeObjectEditorView"
            Visibility="Collapsed">

            <Rectangle
                Fill="Black"
                Opacity="0.3"
                Tapped="RuntimeObjectTransparentBackdrop_Tapped"/>

            <!--We apply padding on right to keep the preview visible-->
            <Grid
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                BorderThickness="0,0,8,0"
                BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}"
                Margin="0,0,320,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock
                    Text="RuntimeObject"
                    Style="{ThemeResource SubtitleTextBlockStyle}"
                    Margin="6"/>
                <local:GenericDocumentView
                    Grid.Row="1"
                    DataContext="{Binding RuntimeObjectEditor}"/>
            </Grid>
        </Grid>








        <!-- JSON input panel-->
        <!--<Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Text="JSON:" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="0"/>
            <RichEditBox x:Name="adaptiveJson" Grid.Row="2"/>
        </Grid>-->

        <!-- Render outputs-->
        <!--<Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Text="Rendered As Xaml Output:" Grid.Row="0"/>
            <ContentPresenter x:Name="renderedXamlPresenter" Grid.Row="1"/>
        </Grid>-->
    </Grid>
    
</Page>
